Binary file tools/sky/python23.dll matches
tools/sky/msp430-bsl-linux:1165:        time.sleep(0.010)                   #recomended delay
tools/sky/msp430-bsl-linux:1242:  --slow                Add delays when operating the conrol pins. Useful if
Binary file tools/sky/msp430-bsl-windows.exe matches
Binary file tools/collect-view/build/org/contikios/contiki/collect/CollectServer.class matches
Binary file tools/collect-view/build/org/contikios/contiki/collect/CollectServer$37.class matches
tools/collect-view/src/org/contikios/contiki/collect/CollectServer.java:871:  private void sleep(long delay) {
tools/collect-view/src/org/contikios/contiki/collect/CollectServer.java:873:      Thread.sleep(delay);
tools/collect-view/src/org/contikios/contiki/collect/CollectServer.java:905:              long delay = Integer.parseInt(line.substring(6).trim());
tools/collect-view/src/org/contikios/contiki/collect/CollectServer.java:906:              Thread.sleep(delay * 1000);
Binary file tools/stm32w/stm32w_flasher/JlinkARM.DLL matches
Binary file tools/stm32w/stm32w_flasher/stm32w_flasher.exe matches
Binary file tools/stm32w/stm32w_flasher/python26.dll matches
Binary file tools/stm32w/serialdump-linux matches
Binary file tools/stm32w/serialdump-windows.exe matches
tools/stm32w/serialdump.c:53:  printf("       -dDELAY delay in us between 2 consecutive writes (must be different from 0)\n");
tools/stm32w/serialdump.c:99:  int delay = DEFAULT_DELAY;
tools/stm32w/serialdump.c:152:        delay = atoi(&argv[index][2]);
tools/stm32w/serialdump.c:153:        if(delay == 0){
tools/stm32w/serialdump.c:258:	      usleep(delay);
tools/mspsim/tests/cputest.c:275:  int delay = 10000;
tools/mspsim/tests/cputest.c:286:  while(delay-- > 0);
Binary file tools/mspsim/build/se/sics/mspsim/core/ADC12.class matches
Binary file tools/mspsim/build/se/sics/mspsim/core/ADC12Plus.class matches
Binary file tools/mspsim/build/se/sics/mspsim/core/Watchdog.class matches
Binary file tools/mspsim/build/se/sics/mspsim/cli/MiscCommands.class matches
Binary file tools/mspsim/firmware/sky/blink.sky matches
Binary file tools/mspsim/firmware/sky/energest-demo.sky matches
Binary file tools/mspsim/firmware/esb/sensor-demo.esb matches
Binary file tools/mspsim/firmware/wismote/blink.wismote matches
Binary file tools/mspsim/firmware/tyndall/blink.tyndall matches
Binary file tools/mspsim/firmware/z1/blink.z1 matches
Binary file tools/mspsim/firmware/exp5438/testcase-bits.exp5438 matches
Binary file tools/mspsim/firmware/exp5438/testcase-hdrsize.exp5438 matches
Binary file tools/mspsim/firmware/exp5438/testcase-shift-fcf.exp5438 matches
tools/mspsim/se/sics/mspsim/core/USART.java:193:         * be made via a 1 cycle or so delayed action */
tools/mspsim/se/sics/mspsim/core/Timer.java:951:          " at cycles: " + cpu.cycles + " servicing delay: " + (cpu.cycles - triggerTime));
tools/mspsim/se/sics/mspsim/core/ADC12Plus.java:288:				int delay = clockPredivider * adcDiv
tools/mspsim/se/sics/mspsim/core/ADC12Plus.java:290:				cpu.scheduleTimeEvent(adcTrigger, cpu.getTime() + delay);
tools/mspsim/se/sics/mspsim/core/ADC12Plus.java:424:			int delay = clockPredivider * adcDiv
tools/mspsim/se/sics/mspsim/core/ADC12Plus.java:426:			cpu.scheduleTimeEvent(adcTrigger, adcTrigger.getTime() + delay);
tools/mspsim/se/sics/mspsim/core/MSP430Core.java:631://          System.out.println("VTimeEvent got delayed by: " + (now - te.time) + " at " +
tools/mspsim/se/sics/mspsim/core/USCI.java:205:         * be made via a 1 cycle or so delayed action */
tools/mspsim/se/sics/mspsim/core/GenericUSCI.java:134:        //             * be made via a 1 cycle or so delayed action */
tools/mspsim/se/sics/mspsim/core/ADC12.java:192:        int delay = adcDiv * ((adc12Pos < 8 ? shTime0 : shTime1) + 13);
tools/mspsim/se/sics/mspsim/core/ADC12.java:193:        cpu.scheduleTimeEvent(adcTrigger, cpu.getTime() + delay);
tools/mspsim/se/sics/mspsim/core/ADC12.java:295:      int delay = adcDiv * ((adc12Pos < 8 ? shTime0 : shTime1) + 13);
tools/mspsim/se/sics/mspsim/core/ADC12.java:296:      cpu.scheduleTimeEvent(adcTrigger, adcTrigger.time + delay);
tools/mspsim/se/sics/mspsim/core/Watchdog.java:74:  // The current "delay" when started/clered (or hold)
tools/mspsim/se/sics/mspsim/core/Watchdog.java:75:  private int delay;
tools/mspsim/se/sics/mspsim/core/Watchdog.java:139:          // Clear timer => reset the delay
tools/mspsim/se/sics/mspsim/core/Watchdog.java:140:          delay = DELAY[value & WDTISx];
tools/mspsim/se/sics/mspsim/core/Watchdog.java:145:          if (DEBUG) log("Setting WDTCNT to count: " + delay);
tools/mspsim/se/sics/mspsim/core/Watchdog.java:148:          // Stop it and remember current "delay" left!
tools/mspsim/se/sics/mspsim/core/Watchdog.java:162:          if (DEBUG) log("setting delay in ms (ACLK): " + 1000.0 * delay / cpu.aclkFrq);
tools/mspsim/se/sics/mspsim/core/Watchdog.java:163:          targetTime = cpu.scheduleTimeEventMillis(wdtTrigger, 1000.0 * delay / cpu.aclkFrq);
tools/mspsim/se/sics/mspsim/core/Watchdog.java:165:          if (DEBUG) log("setting delay in cycles");
tools/mspsim/se/sics/mspsim/core/Watchdog.java:166:          cpu.scheduleCycleEvent(wdtTrigger, targetTime = cpu.cycles + delay);
tools/mspsim/se/sics/mspsim/cli/MiscCommands.java:201:    handler.registerCommand("repeat", new BasicAsyncCommand("repeat the specified command line", "[-t delay] [-c count] <command line>") {
tools/mspsim/CHANGE_LOG.txt:21:- fixed bug in timer system causing severe delays when several CCR/Compare
tools/mspsim/CHANGE_LOG.txt:61:  delays on their events...)
tools/z1/z1-bsl:1353:        time.sleep(0.010)                   #recomended delay
tools/z1/z1-bsl:1467:  --slow                Add delays when operating the conrol pins. Useful if
tools/z1/z1-bsl-nopic:1367:        time.sleep(0.010)                   #recomended delay
tools/z1/z1-bsl-nopic:1481:  --slow                Add delays when operating the conrol pins. Useful if
Binary file tools/cygwin/cygwin1.dll matches
Binary file tools/tunslip6 matches
Binary file tools/cooja/build/org/contikios/cooja/dialogs/CreateSimDialog.class matches
Binary file tools/cooja/build/org/contikios/cooja/RadioConnection.class matches
Binary file tools/cooja/build/org/contikios/cooja/radiomediums/AbstractRadioMedium$1$3.class matches
Binary file tools/cooja/build/org/contikios/cooja/radiomediums/AbstractRadioMedium$1.class matches
Binary file tools/cooja/build/org/contikios/cooja/radiomediums/AbstractRadioMedium$1$1.class matches
Binary file tools/cooja/build/org/contikios/cooja/radiomediums/DirectedGraphMedium.class matches
Binary file tools/cooja/build/org/contikios/cooja/radiomediums/DGRMDestinationRadio.class matches
Binary file tools/cooja/build/org/contikios/cooja/radiomediums/AbstractRadioMedium$1$4.class matches
Binary file tools/cooja/build/org/contikios/cooja/radiomediums/AbstractRadioMedium.class matches
Binary file tools/cooja/build/org/contikios/cooja/radiomediums/AbstractRadioMedium$1$2.class matches
Binary file tools/cooja/build/org/contikios/cooja/plugins/DGRMConfigurator.class matches
Binary file tools/cooja/build/org/contikios/cooja/plugins/LogScriptEngine$10.class matches
Binary file tools/cooja/build/org/contikios/cooja/plugins/LogScriptEngine$10$2.class matches
Binary file tools/cooja/build/org/contikios/cooja/plugins/DGRMConfigurator$12.class matches
Binary file tools/cooja/build/org/contikios/cooja/Simulation.class matches
Binary file tools/cooja/apps/mrm/build/org/contikios/mrm/ChannelModel.class matches
Binary file tools/cooja/apps/mrm/build/org/contikios/mrm/AreaViewer.class matches
tools/cooja/apps/mrm/java/org/contikios/mrm/ChannelModel.java:1548:    double delaySpread = 0;
tools/cooja/apps/mrm/java/org/contikios/mrm/ChannelModel.java:1549:    double delaySpreadRMS = 0;
tools/cooja/apps/mrm/java/org/contikios/mrm/ChannelModel.java:1553:    double delaySpreadTotalWeight = 0;
tools/cooja/apps/mrm/java/org/contikios/mrm/ChannelModel.java:1560:        // Update delay spread TODO Now considering best signal, should be first or mean?
tools/cooja/apps/mrm/java/org/contikios/mrm/ChannelModel.java:1561:        if (pathLengthDiff > delaySpread) {
tools/cooja/apps/mrm/java/org/contikios/mrm/ChannelModel.java:1562:          delaySpread = pathLengthDiff;
tools/cooja/apps/mrm/java/org/contikios/mrm/ChannelModel.java:1566:        // Update root-mean-square delay spread TODO Now considering best signal time, should be mean delay?
tools/cooja/apps/mrm/java/org/contikios/mrm/ChannelModel.java:1567:        delaySpreadTotalWeight += pathGain[i]*pathGain[i];
tools/cooja/apps/mrm/java/org/contikios/mrm/ChannelModel.java:1570:        delaySpreadRMS += rmsDelaySpreadComponent;
tools/cooja/apps/mrm/java/org/contikios/mrm/ChannelModel.java:1588:    // Calculate resulting RMS delay spread
tools/cooja/apps/mrm/java/org/contikios/mrm/ChannelModel.java:1589:    delaySpread /= speedOfLight;
tools/cooja/apps/mrm/java/org/contikios/mrm/ChannelModel.java:1590:    delaySpreadRMS /= delaySpreadTotalWeight;
tools/cooja/apps/mrm/java/org/contikios/mrm/ChannelModel.java:1598:        logInfo.append("Delay spread: " + String.format("%2.3f", delaySpread) + "\n");
tools/cooja/apps/mrm/java/org/contikios/mrm/ChannelModel.java:1599:        logInfo.append("RMS delay spread: " + String.format("%2.3f", delaySpreadRMS) + "\n");
tools/cooja/apps/mrm/java/org/contikios/mrm/ChannelModel.java:1626:      return new double[] {delaySpread, delaySpreadRMS};
tools/cooja/apps/mrm/java/org/contikios/mrm/ChannelModel.java:1779:   * Calculates and returns root-mean-square delay spread when given destination receives a packet from a transmitter at given source.
tools/cooja/apps/mrm/java/org/contikios/mrm/ChannelModel.java:1791:   * @return RMS delay spread
tools/cooja/apps/mrm/java/org/contikios/mrm/AreaViewer.java:551:    JRadioButton rmsDelaySpreadButton = new JRadioButton("RMS delay spread");
tools/cooja/apps/mrm/java/org/contikios/mrm/AreaViewer.java:1901:                    // Get RMS delay spread of receiving a packet
tools/cooja/apps/mspsim/src/org/contikios/cooja/mspmote/interfaces/CC1101Radio.java:62:	 * Inter-byte delay for delivering cross-level packet bytes.
tools/cooja/apps/mspsim/src/org/contikios/cooja/mspmote/interfaces/CC1101Radio.java:230:		/* Delivering packet bytes with delays */
tools/cooja/apps/mspsim/src/org/contikios/cooja/mspmote/interfaces/CC1120Radio.java:62:	 * Inter-byte delay for delivering cross-level packet bytes.
tools/cooja/apps/mspsim/src/org/contikios/cooja/mspmote/interfaces/CC1120Radio.java:231:		/* Delivering packet bytes with delays */
tools/cooja/apps/mspsim/src/org/contikios/cooja/mspmote/interfaces/Msp802154Radio.java:65:   * Inter-byte delay for delivering cross-level packet bytes.
tools/cooja/apps/mspsim/src/org/contikios/cooja/mspmote/interfaces/Msp802154Radio.java:218:    /* Delivering packet bytes with delays */
tools/cooja/apps/mspsim/src/org/contikios/cooja/mspmote/interfaces/CC2520Radio.java:36:   * Inter-byte delay for delivering cross-level packet bytes.
tools/cooja/apps/mspsim/example/helloworld.map:501:                0x00003d36                clock_delay
Binary file tools/cooja/apps/mspsim/example/helloworld.firmware matches
tools/cooja/java/org/contikios/cooja/dialogs/UpdateAggregator.java:66:   * @param delay Max interval (ms)
tools/cooja/java/org/contikios/cooja/dialogs/CreateSimDialog.java:81:  private JFormattedTextField randomSeed, delayedStartup;
tools/cooja/java/org/contikios/cooja/dialogs/CreateSimDialog.java:142:    // Set delayed mote startup time (ms)
tools/cooja/java/org/contikios/cooja/dialogs/CreateSimDialog.java:143:    dialog.delayedStartup.setValue(new Long(simulation.getDelayedMoteStartupTime()/Simulation.MILLISECOND));
tools/cooja/java/org/contikios/cooja/dialogs/CreateSimDialog.java:263:    label = new JLabel("Mote startup delay (ms)");
tools/cooja/java/org/contikios/cooja/dialogs/CreateSimDialog.java:269:    delayedStartup = numberField;
tools/cooja/java/org/contikios/cooja/dialogs/CreateSimDialog.java:274:    horizBox.setToolTipText("Maximum mote startup delay (random interval: [0, time])");
tools/cooja/java/org/contikios/cooja/dialogs/CreateSimDialog.java:294:    horizBox.setToolTipText("Simulation random seed. Controls the random behavior such as mote startup delays, node positions etc.");
tools/cooja/java/org/contikios/cooja/dialogs/CreateSimDialog.java:366:      mySimulation.setDelayedMoteStartupTime((int) ((Number) delayedStartup.getValue()).intValue()*Simulation.MILLISECOND);
tools/cooja/java/org/contikios/cooja/contikimote/interfaces/ContikiClock.java:150:      /*logger.warn("Event timer already expired, but has been delayed: " + nextExpirationTime);*/
tools/cooja/java/org/contikios/cooja/Simulation.java:197:  private TimeEvent delayEvent = new TimeEvent(0) {
tools/cooja/java/org/contikios/cooja/Simulation.java:200:        /* As fast as possible: no need to reschedule delay event */
tools/cooja/java/org/contikios/cooja/Simulation.java:216:        /* Reduce slow-down: execute this delay event less often */
tools/cooja/java/org/contikios/cooja/Simulation.java:442:   * @return Maximum mote startup delay
tools/cooja/java/org/contikios/cooja/Simulation.java:449:   * @param maxMoteStartupDelay Maximum mote startup delay
tools/cooja/java/org/contikios/cooja/Simulation.java:492:    // Max mote startup delay
tools/cooja/java/org/contikios/cooja/Simulation.java:493:    element = new Element("motedelay_us");
tools/cooja/java/org/contikios/cooja/Simulation.java:592:      // Max mote startup delay
tools/cooja/java/org/contikios/cooja/Simulation.java:593:      if (element.getName().equals("motedelay")) {
tools/cooja/java/org/contikios/cooja/Simulation.java:596:      if (element.getName().equals("motedelay_us")) {
tools/cooja/java/org/contikios/cooja/Simulation.java:1017:        if (delayEvent.isScheduled()) {
tools/cooja/java/org/contikios/cooja/Simulation.java:1018:          delayEvent.remove();
tools/cooja/java/org/contikios/cooja/Simulation.java:1020:        scheduleEvent(delayEvent, currentSimulationTime);
tools/cooja/java/org/contikios/cooja/radiomediums/DGRMDestinationRadio.java:43:	public long delay = 0; /* EXPERIMENTAL: Propagation delay (us). */
tools/cooja/java/org/contikios/cooja/radiomediums/DGRMDestinationRadio.java:61:		clone.delay = this.delay;
tools/cooja/java/org/contikios/cooja/radiomediums/DGRMDestinationRadio.java:84:		element = new Element("delay");
tools/cooja/java/org/contikios/cooja/radiomediums/DGRMDestinationRadio.java:85:		element.setText("" + delay);
tools/cooja/java/org/contikios/cooja/radiomediums/DGRMDestinationRadio.java:106:			} else if (element.getName().equals("delay")) {
tools/cooja/java/org/contikios/cooja/radiomediums/DGRMDestinationRadio.java:107:				delay = Long.parseLong(element.getText());
tools/cooja/java/org/contikios/cooja/radiomediums/DirectedGraphMedium.java:56: * The stand-alone radio medium supports propagation delays and
tools/cooja/java/org/contikios/cooja/radiomediums/DirectedGraphMedium.java:329:      newConn.addDestination(dest.radio, dest.delay);
tools/cooja/java/org/contikios/cooja/radiomediums/DirectedGraphMedium.java:348:  private Collection<Element> delayedConfiguration = null;
tools/cooja/java/org/contikios/cooja/radiomediums/DirectedGraphMedium.java:355:    delayedConfiguration = configXML;
tools/cooja/java/org/contikios/cooja/radiomediums/DirectedGraphMedium.java:360:    if (delayedConfiguration == null) {
tools/cooja/java/org/contikios/cooja/radiomediums/DirectedGraphMedium.java:367:    for (Element element : delayedConfiguration) {
tools/cooja/java/org/contikios/cooja/radiomediums/DirectedGraphMedium.java:438:    delayedConfiguration = null;
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:276:							/* EXPERIMENTAL: Simulating propagation delay */
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:277:							final Radio delayedRadio = r;
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:278:							TimeEvent delayedEvent = new TimeEvent(0) {
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:280:									delayedRadio.signalReceptionStart();
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:283:							simulation.scheduleEvent(delayedEvent, simulation.getSimulationTime() + newConnection.getDestinationDelay(r));
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:312:							/* EXPERIMENTAL: Simulating propagation delay */
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:313:							final Radio delayedRadio = dstRadio;
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:314:							TimeEvent delayedEvent = new TimeEvent(0) {
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:316:									delayedRadio.signalReceptionEnd();
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:319:							simulation.scheduleEvent(delayedEvent,
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:366:							/* EXPERIMENTAL: Simulating propagation delay */
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:367:							final CustomDataRadio delayedRadio = (CustomDataRadio) dstRadio;
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:368:							final Object delayedData = data;
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:369:							TimeEvent delayedEvent = new TimeEvent(0) {
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:371:									delayedRadio.receiveCustomData(delayedData);
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:374:							simulation.scheduleEvent(delayedEvent,
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:412:							/* EXPERIMENTAL: Simulating propagation delay */
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:413:							final Radio delayedRadio = dstRadio;
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:414:							final RadioPacket delayedPacket = packet;
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:415:							TimeEvent delayedEvent = new TimeEvent(0) {
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:417:									delayedRadio.setReceivedPacket(delayedPacket);
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:420:							simulation.scheduleEvent(delayedEvent,
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:565:	private Collection<Element> delayedConfiguration = null;
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:568:		delayedConfiguration = configXML;
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:573:		if (delayedConfiguration == null) {
tools/cooja/java/org/contikios/cooja/radiomediums/AbstractRadioMedium.java:577:		for (Element element : delayedConfiguration) {
tools/cooja/java/org/contikios/cooja/RadioConnection.java:132:   * @param delay Radio propagation delay (us)
tools/cooja/java/org/contikios/cooja/RadioConnection.java:134:  public void addDestination(Radio radio, Long delay) {
tools/cooja/java/org/contikios/cooja/RadioConnection.java:140:    allDestinationDelays.add(delay);
tools/cooja/java/org/contikios/cooja/RadioConnection.java:147:   * @return Radio propagation delay (us)
tools/cooja/java/org/contikios/cooja/plugins/LogScriptEngine.java:469:    public void generateMessage(final long delay, final String msg) {
tools/cooja/java/org/contikios/cooja/plugins/LogScriptEngine.java:493:              simulation.getSimulationTime() + delay*Simulation.MILLISECOND);
tools/cooja/java/org/contikios/cooja/plugins/ScriptLog.java:40:    public void generateMessage(long delay, String msg);
tools/cooja/java/org/contikios/cooja/plugins/DGRMConfigurator.java:389:			destRadio.delay = 0;
tools/cooja/java/org/contikios/cooja/plugins/DGRMConfigurator.java:436:        return ((DGRMDestinationRadio)edge.superDest).delay / Simulation.MILLISECOND;
tools/cooja/java/org/contikios/cooja/plugins/DGRMConfigurator.java:455:      		((DGRMDestinationRadio)edge.superDest).delay =
tools/tunslip6.c:63:uint16_t basedelay=0,delaymsec=0;
tools/tunslip6.c:64:uint32_t startsec,startmsec,delaystartsec,delaystartmsec;
tools/tunslip6.c:746:      basedelay = 10;
tools/tunslip6.c:747:      if (optarg) basedelay = atoi(optarg);
tools/tunslip6.c:783:fprintf(stderr," -d[basedelay]  Minimum delay between outgoing SLIP packets.\n");
tools/tunslip6.c:784:fprintf(stderr,"                Actual delay is basedelay*(#6LowPAN fragments) milliseconds.\n");
tools/tunslip6.c:796:    err(1, "usage: %s [-B baudrate] [-H] [-L] [-s siodev] [-t tundev] [-T] [-v verbosity] [-d delay] [-a serveraddress] [-p serverport] ipaddress", prog);
tools/tunslip6.c:973:      /* Optional delay between outgoing packets */
tools/tunslip6.c:974:      /* Base delay times number of 6lowpan fragments to be sent */
tools/tunslip6.c:975:      if(delaymsec) {
tools/tunslip6.c:979:       dmsec=(tv.tv_sec-delaystartsec)*1000+tv.tv_usec/1000-delaystartmsec;
tools/tunslip6.c:980:       if(dmsec<0) delaymsec=0;
tools/tunslip6.c:981:       if(dmsec>delaymsec) delaymsec=0;
tools/tunslip6.c:983:      if(delaymsec==0) {
tools/tunslip6.c:989:          if(basedelay) {
tools/tunslip6.c:992: //         delaymsec=basedelay*(1+(size/120));//multiply by # of 6lowpan packets?
tools/tunslip6.c:993:            delaymsec=basedelay;
tools/tunslip6.c:994:            delaystartsec =tv.tv_sec;
tools/tunslip6.c:995:            delaystartmsec=tv.tv_usec/1000;
doc/uip-doc.txt:139:timers, such as delayed acknowledgments, retransmissions and
doc/uip-doc.txt:1149:Most TCP receivers implement the delayed acknowledgment algorithm for
doc/uip-doc.txt:1157:segment will interact poorly with the delayed acknowledgment
doc/uip-doc.txt:1165:delayed acknowledgment timeout, which typically is between 200 and
doc/uip-doc.txt:1167:and a delayed acknowledgment timeout of 200 ms, the maximum
doc/uip-doc.txt:1168:throughput will be 4166 bytes per second. With the delayed acknowledgment
doc/uip-doc.txt:1173:not very likely to have large amounts of data to send, the delayed
doc/uip-doc.txt:1180:the delayed acknowledgment throughput degradation.
doc/uip-doc.txt:1183:problems with the delayed acknowledgment throughput degradation.
doc/uip6-doc.txt:221:\li The #uip_netif_timer_rs is use to delay the sending of Router Solicitations
regression-tests/11-ipv6/05-exp5438-udp-fragmentation-nullrdc.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/11-ipv6/12-exp5438-unicast-fragmentation-contikimac-large-sender.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/11-ipv6/17-cooja-multicast-11-hops.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/11-ipv6/01-cooja-ipv6-udp.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/11-ipv6/07-exp5438-udp-fragmentation-nullrdc-large-sender.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/11-ipv6/11-exp5438-unicast-fragmentation-nullrdc.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/11-ipv6/13-exp5438-unicast-fragmentation-nullrdc-large-sender.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/11-ipv6/04-exp5438-udp-fragmentation-contikimac.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/11-ipv6/x03-sky-ipv6-udp-fragmentation.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/11-ipv6/16-sky-ipv6-rpl-collect.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/11-ipv6/18-cooja-multicast-31-hops.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/11-ipv6/06-exp5438-udp-fragmentation-contikimac-large-sender.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/11-ipv6/09-exp5438-udp-fragmentation-nullrdc-too-large-sender.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/11-ipv6/02-sky-ipv6-udp.csc.flaky:8:    <delaytime>0</delaytime>
regression-tests/11-ipv6/02-sky-ipv6-udp.csc.flaky:10:    <motedelay_us>1000000</motedelay_us>
regression-tests/11-ipv6/08-exp5438-udp-fragmentation-contikimac-too-large-sender.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/11-ipv6/010-exp5438-unicast-fragmentation-contikimac.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/11-ipv6/14-exp5438-unicast-fragmentation-contikimac-too-large-sender.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/11-ipv6/15-exp5438-unicast-fragmentation-nullrdc-too-large-sender.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/09-collect-lossy/01-sky-shell-collect-lossy.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/05-netperf/02-sky-netperf-lpp.csc:9:    <delaytime>0</delaytime>
regression-tests/05-netperf/02-sky-netperf-lpp.csc:11:    <motedelay_us>1000000</motedelay_us>
regression-tests/05-netperf/03-sky-netperf-cxmac.csc:9:    <delaytime>0</delaytime>
regression-tests/05-netperf/03-sky-netperf-cxmac.csc:11:    <motedelay_us>1000000</motedelay_us>
regression-tests/05-netperf/01-sky-netperf.csc:9:    <delaytime>0</delaytime>
regression-tests/05-netperf/01-sky-netperf.csc:11:    <motedelay_us>1000000</motedelay_us>
regression-tests/08-collect/01-sky-shell-collect.csc:9:    <delaytime>0</delaytime>
regression-tests/08-collect/01-sky-shell-collect.csc:11:    <motedelay_us>1000000</motedelay_us>
regression-tests/07-elfloader/01-sky-shell-exec-serial.csc:5:    <delaytime>-2147483648</delaytime>
regression-tests/07-elfloader/01-sky-shell-exec-serial.csc:7:    <motedelay_us>1000000</motedelay_us>
regression-tests/19-llsec/01-ccm-star.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/12-rpl/03-rpl-28-hours.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/12-rpl/08-rpl-dao-route-loss-0.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/12-rpl/08-rpl-dao-route-loss-2.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/12-rpl/04-rpl-large-network.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/12-rpl/01-rpl-up-route.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/12-rpl/07-rpl-random-rearrangement.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/12-rpl/08-rpl-dao-route-loss-1.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/12-rpl/08-rpl-dao-route-loss-5.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/12-rpl/02-rpl-root-reboot.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/12-rpl/09-rpl-probing.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/12-rpl/08-rpl-dao-route-loss-4.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/12-rpl/05-rpl-up-and-down-routes.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/12-rpl/06-rpl-temporary-root-loss.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/12-rpl/08-rpl-dao-route-loss-3.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/17-slip-radio/01-sky-slip-radio-dio.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/03-base/01-multithreading.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/03-base/02-sky-coffee.csc:10:    <delaytime>0</delaytime>
regression-tests/03-base/02-sky-coffee.csc:12:    <motedelay_us>0</motedelay_us>
regression-tests/03-base/x03-crosslevel.csc:5:    <delaytime>0</delaytime>
regression-tests/03-base/x03-crosslevel.csc:7:    <motedelay_us>5000000</motedelay_us>
regression-tests/20-ip64/01-cooja-ip64-http-socket.csc:13:    <motedelay_us>1000000</motedelay_us>
regression-tests/20-ip64/01-cooja-ip64-http-socket.csc:162:/* delay */&#xD;
regression-tests/10-ipv4/x02-ip-sky-telnet-ping.csc:5:    <delaytime>-2147483648</delaytime>
regression-tests/10-ipv4/x02-ip-sky-telnet-ping.csc:7:    <motedelay_us>1000000</motedelay_us>
regression-tests/10-ipv4/x03-ip-sky-webserver-wget.csc:9:    <delaytime>0</delaytime>
regression-tests/10-ipv4/x03-ip-sky-webserver-wget.csc:11:    <motedelay_us>1000000</motedelay_us>
regression-tests/10-ipv4/x01-ip-cooja-telnet-ping.csc:5:    <delaytime>-2147483648</delaytime>
regression-tests/10-ipv4/x01-ip-cooja-telnet-ping.csc:7:    <motedelay_us>1000000</motedelay_us>
regression-tests/02-hello-world/01-hello-world-cooja.csc.flaky:6:    <motedelay_us>1000000</motedelay_us>
regression-tests/02-hello-world/07-z1-hello-world.csc:6:    <motedelay_us>1000000</motedelay_us>
regression-tests/02-hello-world/06-wismote-hello-world.csc:6:    <motedelay_us>1000000</motedelay_us>
regression-tests/02-hello-world/03-hello-world-micaz.csc:6:    <motedelay_us>1000000</motedelay_us>
regression-tests/02-hello-world/02-hello-world-sky.csc:6:    <motedelay_us>1000000</motedelay_us>
regression-tests/02-hello-world/05-exp5438-hello-world.csc:6:    <motedelay_us>1000000</motedelay_us>
regression-tests/06-shell/03-sky-shell-sendcmd.csc:8:    <delaytime>0</delaytime>
regression-tests/06-shell/03-sky-shell-sendcmd.csc:10:    <motedelay_us>1000000</motedelay_us>
regression-tests/06-shell/02-sky-shell-basic-commands.csc:9:    <delaytime>0</delaytime>
regression-tests/06-shell/02-sky-shell-basic-commands.csc:11:    <motedelay_us>1000000</motedelay_us>
regression-tests/06-shell/04-sky-shell-download.csc.fails:5:    <delaytime>-2147483648</delaytime>
regression-tests/06-shell/04-sky-shell-download.csc.fails:7:    <motedelay_us>1000000</motedelay_us>
regression-tests/06-shell/01-sky-shell-compile.csc:9:    <delaytime>0</delaytime>
regression-tests/06-shell/01-sky-shell-compile.csc:11:    <motedelay_us>1000000</motedelay_us>
regression-tests/13-ipv6-apps/rest_rpl_coap.js:13:/* delay */
regression-tests/13-ipv6-apps/rest_rpl_coap.js:40:/* delay */
regression-tests/13-ipv6-apps/01-sky-servreg-hack.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/13-ipv6-apps/x02-sky-coap.csc:5:    <delaytime>-2147483648</delaytime>
regression-tests/13-ipv6-apps/x02-sky-coap.csc:7:    <motedelay_us>1000000</motedelay_us>
regression-tests/04-rime/06-sky-trickle.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/04-rime/04-sky-deluge.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/04-rime/08-sky-collect.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/04-rime/03-sky-abc.csc:12:    <motedelay_us>5000000</motedelay_us>
regression-tests/04-rime/10-cooja-mesh.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/04-rime/09-cooja-trickle.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/04-rime/02-cooja-rucb.csc:12:    <motedelay_us>1000000</motedelay_us>
regression-tests/04-rime/01-cooja-collect.csc:12:    <motedelay_us>10000000</motedelay_us>
regression-tests/04-rime/07-sky-collect.csc:12:    <motedelay_us>10000000</motedelay_us>
regression-tests/04-rime/05-sky-runicast.csc:12:    <motedelay_us>10000000</motedelay_us>
dev/cc2420/cc2420.c:412:  clock_delay(1);
dev/cc2420/cc2420.c:564:  clock_delay(250);
dev/cc2420/cc2420.c:566:  clock_delay(127);
dev/cc2420/cc2420.c:568:  clock_delay(125);
dev/sht11/sht11.c:66:#ifndef delay_400ns
dev/sht11/sht11.c:67:#define delay_400ns() _NOP()
dev/sht11/sht11.c:74:  delay_400ns();
dev/sht11/sht11.c:76:  delay_400ns();
dev/sht11/sht11.c:78:  delay_400ns();
dev/sht11/sht11.c:80:  delay_400ns();
dev/sht11/sht11.c:82:  delay_400ns();
dev/sht11/sht11.c:84:  delay_400ns();
dev/sht11/sht11.c:96:    delay_400ns();
dev/sht11/sht11.c:98:    delay_400ns();
dev/sht11/sht11.c:120:    delay_400ns();
dev/sht11/sht11.c:122:    delay_400ns();
dev/sht11/sht11.c:127:  delay_400ns();
dev/sht11/sht11.c:145:    delay_400ns();
dev/sht11/sht11.c:150:    delay_400ns();
dev/sht11/sht11.c:157:  delay_400ns();
dev/cc2520/cc2520.c:323:  clock_delay(250);
dev/cc2520/cc2520.c:326:  clock_delay(250);
dev/cc2520/cc2520.c:328:  clock_delay(127);
dev/cc2520/cc2520.c:330:  clock_delay(125);
dev/cc2520/cc2520.c:333:  clock_delay(125);
dev/cc2520/cc2520.h:131:    clock_delay(1);                                                     \
dev/cc2520/cc2520.h:144:    clock_delay(1);                                                     \
dev/ds2411/ds2411.c:76: * The loop in clock_delay consists of one add and one jnz, i.e 3
dev/ds2411/ds2411.c:89:#define udelay(u) clock_delay((u*8 - 14)/6)
dev/ds2411/ds2411.c:95:#define udelay_6() { _NOP(); _NOP(); _NOP(); _NOP(); _NOP(); _NOP(); _NOP(); }
dev/ds2411/ds2411.c:100: * Recommended delay times in us.
dev/ds2411/ds2411.c:102:#define udelay_tA() udelay_6()
dev/ds2411/ds2411.c:119:  udelay(tH);
dev/ds2411/ds2411.c:121:  udelay(tI);
dev/ds2411/ds2411.c:123:  udelay(tJ);
dev/ds2411/ds2411.c:134:      udelay_tA();
dev/ds2411/ds2411.c:136:      udelay(tB);
dev/ds2411/ds2411.c:139:      udelay(tC);
dev/ds2411/ds2411.c:141:      udelay(tD);
dev/ds2411/ds2411.c:158:    udelay_tA();
dev/ds2411/ds2411.c:160:    udelay(tE);
dev/ds2411/ds2411.c:164:    udelay(tF);
examples/cc26xx/cc26xx-web-demo/mqtt-client.c:847:       * simply there is some network delay. In both cases, we refuse to
examples/ipv6/rpl-udp/rpl-udp.csc:9:    <delaytime>0</delaytime>
examples/ipv6/rpl-udp/rpl-udp.csc:11:    <motedelay_us>5000000</motedelay_us>
examples/ipv6/rpl-udp/rpl-udp-powertrace.csc:9:    <delaytime>0</delaytime>
examples/ipv6/rpl-udp/rpl-udp-powertrace.csc:11:    <motedelay_us>5000000</motedelay_us>
examples/ipv6/native-border-router/slip-config.c:58:uint16_t slip_config_basedelay = 0;
examples/ipv6/native-border-router/slip-config.c:115:      slip_config_basedelay = 10;
examples/ipv6/native-border-router/slip-config.c:116:      if(optarg) slip_config_basedelay = atoi(optarg);
examples/ipv6/native-border-router/slip-config.c:149:fprintf(stderr," -d[basedelay]  Minimum delay between outgoing SLIP packets.\n");
examples/ipv6/native-border-router/slip-config.c:150:fprintf(stderr,"                Actual delay is basedelay*(#6LowPAN fragments) milliseconds.\n");
examples/ipv6/native-border-router/slip-config.c:160:    err(1, "usage: %s [-B baudrate] [-H] [-L] [-s siodev] [-t tundev] [-T] [-v verbosity] [-d delay] [-a serveraddress] [-p serverport] ipaddress", prog);
examples/ipv6/native-border-router/tun-bridge.c:70:extern uint16_t slip_config_basedelay;
examples/ipv6/native-border-router/tun-bridge.c:198:static uint16_t delaymsec=0;
examples/ipv6/native-border-router/tun-bridge.c:199:static uint32_t delaystartsec,delaystartmsec;
examples/ipv6/native-border-router/tun-bridge.c:278:  /* Optional delay between outgoing packets */
examples/ipv6/native-border-router/tun-bridge.c:279:  /* Base delay times number of 6lowpan fragments to be sent */
examples/ipv6/native-border-router/tun-bridge.c:280:  /* delaymsec = 10; */
examples/ipv6/native-border-router/tun-bridge.c:281:  if(delaymsec) {
examples/ipv6/native-border-router/tun-bridge.c:285:    dmsec=(tv.tv_sec-delaystartsec)*1000+tv.tv_usec/1000-delaystartmsec;
examples/ipv6/native-border-router/tun-bridge.c:286:    if(dmsec<0) delaymsec=0;
examples/ipv6/native-border-router/tun-bridge.c:287:    if(dmsec>delaymsec) delaymsec=0;
examples/ipv6/native-border-router/tun-bridge.c:290:  if(delaymsec==0) {
examples/ipv6/native-border-router/tun-bridge.c:299:      if(slip_config_basedelay) {
examples/ipv6/native-border-router/tun-bridge.c:302:      	delaymsec=slip_config_basedelay;
examples/ipv6/native-border-router/tun-bridge.c:303:      	delaystartsec =tv.tv_sec;
examples/ipv6/native-border-router/tun-bridge.c:304:      	delaystartmsec=tv.tv_usec/1000;
examples/ipv6/native-border-router/slip-dev.c:64:extern uint16_t slip_config_basedelay;
examples/ipv6/native-border-router/slip-dev.c:285:static struct timer send_delay_timer;
examples/ipv6/native-border-router/slip-dev.c:286:/* delay between slip packets */
examples/ipv6/native-border-router/slip-dev.c:287:static clock_time_t send_delay = SEND_DELAY;
examples/ipv6/native-border-router/slip-dev.c:346:        /* a delay between slip packets to avoid losing data */
examples/ipv6/native-border-router/slip-dev.c:347:        if(send_delay > 0) {
examples/ipv6/native-border-router/slip-dev.c:348:          timer_set(&send_delay_timer, send_delay);
examples/ipv6/native-border-router/slip-dev.c:466:  if(!slip_empty() && (send_delay == 0 || timer_expired(&send_delay_timer))) {
examples/ipv6/native-border-router/slip-dev.c:539:  timer_set(&send_delay_timer, 0);
examples/ipv6/multicast/multicast.csc:12:    <motedelay_us>1000000</motedelay_us>
examples/ipv6/sky-websense/example-sky-websense.csc:9:    <delaytime>0</delaytime>
examples/ipv6/sky-websense/example-sky-websense.csc:11:    <motedelay_us>1000000</motedelay_us>
examples/ipv6/simple-udp-rpl/unicast-example.csc:13:    <delaytime>0</delaytime>
examples/ipv6/simple-udp-rpl/unicast-example.csc:15:    <motedelay_us>1000000</motedelay_us>
examples/ipv6/simple-udp-rpl/broadcast-example.csc:13:    <delaytime>0</delaytime>
examples/ipv6/simple-udp-rpl/broadcast-example.csc:15:    <motedelay_us>1000000</motedelay_us>
examples/ipv6/rpl-border-router/border-router.c~:370:   * Since we are the DAG root, reception delays would constrain mesh throughbut.
Binary file examples/ipv6/rpl-border-router/contiki-z1.a matches
Binary file examples/ipv6/rpl-border-router/obj_sky/rpl.o matches
Binary file examples/ipv6/rpl-border-router/obj_sky/clock.o matches
Binary file examples/ipv6/rpl-border-router/obj_sky/tcpip.o matches
Binary file examples/ipv6/rpl-border-router/obj_sky/uip-icmp6.o matches
Binary file examples/ipv6/rpl-border-router/obj_sky/rpl-dag.o matches
Binary file examples/ipv6/rpl-border-router/obj_sky/rpl-icmp6.o matches
Binary file examples/ipv6/rpl-border-router/obj_sky/rpl-timers.o matches
Binary file examples/ipv6/rpl-border-router/obj_sky/leds.o matches
Binary file examples/ipv6/rpl-border-router/obj_sky/uip6.o matches
Binary file examples/ipv6/rpl-border-router/obj_sky/ds2411.o matches
Binary file examples/ipv6/rpl-border-router/obj_sky/rpl-mrhof.o matches
Binary file examples/ipv6/rpl-border-router/obj_sky/cc2420.o matches
Binary file examples/ipv6/rpl-border-router/obj_sky/rpl-of0.o matches
Binary file examples/ipv6/rpl-border-router/obj_sky/rpl-ext-header.o matches
Binary file examples/ipv6/rpl-border-router/obj_sky/resolv.o matches
Binary file examples/ipv6/rpl-border-router/obj_sky/rpl-dag-root.o matches
examples/ipv6/rpl-border-router/border-router.c:371:   * Since we are the DAG root, reception delays would constrain mesh throughbut.
Binary file examples/ipv6/rpl-border-router/obj_z1/rpl.o matches
Binary file examples/ipv6/rpl-border-router/obj_z1/clock.o matches
Binary file examples/ipv6/rpl-border-router/obj_z1/tcpip.o matches
Binary file examples/ipv6/rpl-border-router/obj_z1/uip-icmp6.o matches
Binary file examples/ipv6/rpl-border-router/obj_z1/rpl-dag.o matches
Binary file examples/ipv6/rpl-border-router/obj_z1/rpl-icmp6.o matches
Binary file examples/ipv6/rpl-border-router/obj_z1/rpl-timers.o matches
Binary file examples/ipv6/rpl-border-router/obj_z1/leds.o matches
Binary file examples/ipv6/rpl-border-router/obj_z1/uip6.o matches
Binary file examples/ipv6/rpl-border-router/obj_z1/rpl-mrhof.o matches
Binary file examples/ipv6/rpl-border-router/obj_z1/cc2420.o matches
Binary file examples/ipv6/rpl-border-router/obj_z1/rpl-of0.o matches
Binary file examples/ipv6/rpl-border-router/obj_z1/rpl-ext-header.o matches
Binary file examples/ipv6/rpl-border-router/obj_z1/resolv.o matches
Binary file examples/ipv6/rpl-border-router/obj_z1/rpl-dag-root.o matches
Binary file examples/ipv6/rpl-border-router/border-router.z1 matches
examples/ipv6/rpl-border-router/contiki-z1.map:1411: .any.text.clock_delay
examples/ipv6/rpl-border-router/contiki-z1.map:1413:                0x000062fc                clock_delay
Binary file examples/ipv6/rpl-border-router/border-router.sky matches
examples/ipv6/rpl-collect/collect-tree-dense-noloss.csc:10:    <delaytime>0</delaytime>
examples/ipv6/rpl-collect/collect-tree-dense-noloss.csc:12:    <motedelay_us>1000000</motedelay_us>
examples/ipv6/rpl-collect/collect-tree-sparse-lossy.csc:10:    <delaytime>0</delaytime>
examples/ipv6/rpl-collect/collect-tree-sparse-lossy.csc:12:    <motedelay_us>1000000</motedelay_us>
examples/ipv6/json-ws/gogoc.conf:130:#  after a disconnection occurred. The time to wait is 'retry_delay' and that
examples/ipv6/json-ws/gogoc.conf:131:#  delay is doubled at every 3 failed consecutive reconnection attempt.
examples/ipv6/json-ws/gogoc.conf:132:#  However, the wait delay will never exceed retry_delay_max.
examples/ipv6/json-ws/gogoc.conf:136:#   retry_delay=<integer: 0..3600>
examples/ipv6/json-ws/gogoc.conf:137:#   retry_delay_max=<integer: 0..3600>
examples/ipv6/json-ws/gogoc.conf:142:retry_delay=30
examples/ipv6/json-ws/gogoc.conf:143:retry_delay_max=300
examples/cc2538dk/mqtt-demo/mqtt-demo.c:631:       * simply there is some network delay. In both cases, we refuse to
examples/cc2538dk/timer-test.c:40: *    clock_delay_usec.
examples/cc2538dk/timer-test.c:106:  printf("clock_delay_usec test, (10,000 x i) usec:\n");
examples/cc2538dk/timer-test.c:107:  printf("N.B. clock_delay_usec is more accurate than rtimers\n");
examples/cc2538dk/timer-test.c:111:    clock_delay_usec(10000 * i);
examples/collect/example-collect-view.csc:10:    <delaytime>0</delaytime>
examples/collect/example-collect-view.csc:12:    <motedelay_us>1000000</motedelay_us>
examples/udp-stream/udp-stream.csc:8:    <delaytime>0</delaytime>
examples/udp-stream/udp-stream.csc:10:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example (observe)/ctr_test_observe_block-wise.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example (observe)/server-client-native.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example (observe)/server-client_ctr_test10.csc:12:    <motedelay_us>1000000</motedelay_us>
Binary file examples/er-rest-example (observe)/er-example-observe-client.z1 matches
examples/er-rest-example (observe)/server-client_ctr.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example (observe)/server-client.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example (observe)/server-client-observe.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example (observe)/server-client_ctr_test8.csc:12:    <motedelay_us>1000000</motedelay_us>
Binary file examples/er-rest-example (observe)/er-example-client.sky matches
Binary file examples/er-rest-example (observe)/er-example-server.z1 matches
Binary file examples/er-rest-example (observe)/contiki-z1.a matches
Binary file examples/er-rest-example (observe)/obj_sky/rpl.o matches
Binary file examples/er-rest-example (observe)/obj_sky/clock.o matches
Binary file examples/er-rest-example (observe)/obj_sky/tcpip.o matches
Binary file examples/er-rest-example (observe)/obj_sky/uip-icmp6.o matches
Binary file examples/er-rest-example (observe)/obj_sky/rpl-dag.o matches
Binary file examples/er-rest-example (observe)/obj_sky/rpl-icmp6.o matches
Binary file examples/er-rest-example (observe)/obj_sky/rpl-timers.o matches
Binary file examples/er-rest-example (observe)/obj_sky/leds.o matches
Binary file examples/er-rest-example (observe)/obj_sky/uip6.o matches
Binary file examples/er-rest-example (observe)/obj_sky/ds2411.o matches
Binary file examples/er-rest-example (observe)/obj_sky/rpl-mrhof.o matches
Binary file examples/er-rest-example (observe)/obj_sky/cc2420.o matches
Binary file examples/er-rest-example (observe)/obj_sky/rpl-of0.o matches
Binary file examples/er-rest-example (observe)/obj_sky/rpl-ext-header.o matches
Binary file examples/er-rest-example (observe)/obj_sky/resolv.o matches
Binary file examples/er-rest-example (observe)/obj_sky/rpl-dag-root.o matches
examples/er-rest-example (observe)/ctr_test_observe.csc:12:    <motedelay_us>1000000</motedelay_us>
Binary file examples/er-rest-example (observe)/obj_z1/rpl.o matches
Binary file examples/er-rest-example (observe)/obj_z1/clock.o matches
Binary file examples/er-rest-example (observe)/obj_z1/tcpip.o matches
Binary file examples/er-rest-example (observe)/obj_z1/uip-icmp6.o matches
Binary file examples/er-rest-example (observe)/obj_z1/rpl-dag.o matches
Binary file examples/er-rest-example (observe)/obj_z1/rpl-icmp6.o matches
Binary file examples/er-rest-example (observe)/obj_z1/rpl-timers.o matches
Binary file examples/er-rest-example (observe)/obj_z1/leds.o matches
Binary file examples/er-rest-example (observe)/obj_z1/uip6.o matches
Binary file examples/er-rest-example (observe)/obj_z1/rpl-mrhof.o matches
Binary file examples/er-rest-example (observe)/obj_z1/cc2420.o matches
Binary file examples/er-rest-example (observe)/obj_z1/rpl-of0.o matches
Binary file examples/er-rest-example (observe)/obj_z1/rpl-ext-header.o matches
Binary file examples/er-rest-example (observe)/obj_z1/resolv.o matches
Binary file examples/er-rest-example (observe)/obj_z1/rpl-dag-root.o matches
examples/er-rest-example (observe)/contiki-z1.map:2053: .any.text.clock_delay
examples/er-rest-example (observe)/contiki-z1.map:2055:                0x00007b3a                clock_delay
examples/er-rest-example (observe)/server-only.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/sensinode/energy-scan/energy-scan.c:79:    clock_delay_usec(200);
examples/sensinode/timer-test.c:69:  printf("clock_delay_usec test, (10,000 x i) usec:\n");
examples/sensinode/timer-test.c:73:    clock_delay_usec(10000 * i);
examples/trickle-library/trickle-library.csc:11:    <delaytime>0</delaytime>
examples/trickle-library/trickle-library.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/rime/example-collect.csc:13:    <delaytime>0</delaytime>
examples/rime/example-collect.csc:15:    <motedelay_us>1000000</motedelay_us>
examples/rime/example-broadcast.csc:13:    <delaytime>0</delaytime>
examples/rime/example-broadcast.csc:15:    <motedelay_us>1000000</motedelay_us>
examples/hello-world/hello-world-example.csc:13:    <delaytime>0</delaytime>
examples/hello-world/hello-world-example.csc:15:    <motedelay_us>1000000</motedelay_us>
examples/z1/ipv6/z1-websense/example-sky-websense.csc:9:    <delaytime>0</delaytime>
examples/z1/ipv6/z1-websense/example-sky-websense.csc:11:    <motedelay_us>1000000</motedelay_us>
examples/antelope/netdb/netdb.csc:10:    <delaytime>0</delaytime>
examples/antelope/netdb/netdb.csc:12:    <motedelay_us>1000000</motedelay_us>
examples/netperf/netperf-sky.csc:9:    <delaytime>0</delaytime>
examples/netperf/netperf-sky.csc:11:    <motedelay_us>1000000</motedelay_us>
Binary file examples/er-rest-example/er-example-client.z1 matches
examples/er-rest-example/ctr_test_observe_block-wise.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example/server-client-native.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example/server-client_ctr_test10.csc:12:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example/ctr_test_observe_block-wise_ok_03_squar_5_node.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example/ctr_test_observe_block-wise11.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example/ctr_test_observe_block-wise_ok_03_randome_8_node.csc:13:    <motedelay_us>1000000</motedelay_us>
Binary file examples/er-rest-example/er-example-observe-client.z1 matches
examples/er-rest-example/server-client_ctr.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example/ctr_test_observe_block-wise_ok_03_circult_8_node.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example/ctr_test_observe_block-wise_ok_03_circle_5_node.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example/server-client.csc:13:    <motedelay_us>1000000</motedelay_us>
Binary file examples/er-rest-example/er-example-server_observe_blockwise.z1 matches
examples/er-rest-example/server-client-observe.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example/server-client_ctr_test8.csc:12:    <motedelay_us>1000000</motedelay_us>
Binary file examples/er-rest-example/er-example-server_copy.z1 matches
examples/er-rest-example/ctr_test_observe_block-wise_ok_03.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example/ctr_test_observe_block-wise_ok_03_randome_5_node.csc:13:    <motedelay_us>1000000</motedelay_us>
Binary file examples/er-rest-example/er-example-client.sky matches
Binary file examples/er-rest-example/er-example-server.z1 matches
Binary file examples/er-rest-example/contiki-z1.a matches
Binary file examples/er-rest-example/obj_sky/rpl.o matches
Binary file examples/er-rest-example/obj_sky/clock.o matches
Binary file examples/er-rest-example/obj_sky/tcpip.o matches
Binary file examples/er-rest-example/obj_sky/uip-icmp6.o matches
Binary file examples/er-rest-example/obj_sky/rpl-dag.o matches
Binary file examples/er-rest-example/obj_sky/rpl-icmp6.o matches
Binary file examples/er-rest-example/obj_sky/rpl-timers.o matches
Binary file examples/er-rest-example/obj_sky/leds.o matches
Binary file examples/er-rest-example/obj_sky/uip6.o matches
Binary file examples/er-rest-example/obj_sky/ds2411.o matches
Binary file examples/er-rest-example/obj_sky/rpl-mrhof.o matches
Binary file examples/er-rest-example/obj_sky/cc2420.o matches
Binary file examples/er-rest-example/obj_sky/rpl-of0.o matches
Binary file examples/er-rest-example/obj_sky/rpl-ext-header.o matches
Binary file examples/er-rest-example/obj_sky/resolv.o matches
Binary file examples/er-rest-example/obj_sky/rpl-dag-root.o matches
examples/er-rest-example/ctr_test_observe_block-wise_ok_01.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example/ctr_test_observe_block-wise_ok_03_squar_8_node.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example/ctr_test_observe.csc:12:    <motedelay_us>1000000</motedelay_us>
Binary file examples/er-rest-example/obj_z1/rpl.o matches
Binary file examples/er-rest-example/obj_z1/clock.o matches
Binary file examples/er-rest-example/obj_z1/tcpip.o matches
Binary file examples/er-rest-example/obj_z1/uip-icmp6.o matches
Binary file examples/er-rest-example/obj_z1/rpl-dag.o matches
Binary file examples/er-rest-example/obj_z1/rpl-icmp6.o matches
Binary file examples/er-rest-example/obj_z1/rpl-timers.o matches
Binary file examples/er-rest-example/obj_z1/leds.o matches
Binary file examples/er-rest-example/obj_z1/uip6.o matches
Binary file examples/er-rest-example/obj_z1/rpl-mrhof.o matches
Binary file examples/er-rest-example/obj_z1/cc2420.o matches
Binary file examples/er-rest-example/obj_z1/rpl-of0.o matches
Binary file examples/er-rest-example/obj_z1/rpl-ext-header.o matches
Binary file examples/er-rest-example/obj_z1/resolv.o matches
Binary file examples/er-rest-example/obj_z1/rpl-dag-root.o matches
examples/er-rest-example/contiki-z1.map:2091: .any.text.clock_delay
examples/er-rest-example/contiki-z1.map:2093:                0x00007e30                clock_delay
examples/er-rest-example/server-only.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example/ctr_test_observe_block-wise_ok_02.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example (original)/server-client-native.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example (original)/server-client.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/er-rest-example (original)/server-client-observe.csc:13:    <motedelay_us>1000000</motedelay_us>
Binary file examples/er-rest-example (original)/er-example-server.z1 matches
Binary file examples/er-rest-example (original)/contiki-z1.a matches
Binary file examples/er-rest-example (original)/obj_z1/rpl.o matches
Binary file examples/er-rest-example (original)/obj_z1/clock.o matches
Binary file examples/er-rest-example (original)/obj_z1/tcpip.o matches
Binary file examples/er-rest-example (original)/obj_z1/uip-icmp6.o matches
Binary file examples/er-rest-example (original)/obj_z1/rpl-dag.o matches
Binary file examples/er-rest-example (original)/obj_z1/rpl-icmp6.o matches
Binary file examples/er-rest-example (original)/obj_z1/rpl-timers.o matches
Binary file examples/er-rest-example (original)/obj_z1/leds.o matches
Binary file examples/er-rest-example (original)/obj_z1/uip6.o matches
Binary file examples/er-rest-example (original)/obj_z1/rpl-mrhof.o matches
Binary file examples/er-rest-example (original)/obj_z1/cc2420.o matches
Binary file examples/er-rest-example (original)/obj_z1/rpl-of0.o matches
Binary file examples/er-rest-example (original)/obj_z1/rpl-ext-header.o matches
Binary file examples/er-rest-example (original)/obj_z1/resolv.o matches
Binary file examples/er-rest-example (original)/obj_z1/rpl-dag-root.o matches
examples/er-rest-example (original)/contiki-z1.map:1947: .any.text.clock_delay
examples/er-rest-example (original)/contiki-z1.map:1949:                0x000082a2                clock_delay
examples/er-rest-example (original)/server-only.csc:13:    <motedelay_us>1000000</motedelay_us>
examples/cc2530dk/timer-test.c:69:  printf("clock_delay_usec test, (10,000 x i) usec:\n");
examples/cc2530dk/timer-test.c:73:    clock_delay_usec(10000 * i);
cpu/arm/at91sam7s/clock.c:60:clock_delay(unsigned int t)
cpu/arm/common/usb/msc/scsi_struct.h:354:  uint16_bytes write_delay_time;
cpu/arm/openocd/target/stm32F10xxx.cfg:24:jtag_nsrst_delay 1
cpu/arm/stm32f103/clock.c:56:clock_delay(unsigned int t)
cpu/arm/stm32f103/stm32f10x_map.h:4488:#define  FSMC_PCR2_TCLR                      ((u32)0x00001E00)        /* TCLR[3:0] bits (CLE to RE delay) */
cpu/arm/stm32f103/stm32f10x_map.h:4494:#define  FSMC_PCR2_TAR                       ((u32)0x0001E000)        /* TAR[3:0] bits (ALE to RE delay) */
cpu/arm/stm32f103/stm32f10x_map.h:4518:#define  FSMC_PCR3_TCLR                      ((u32)0x00001E00)        /* TCLR[3:0] bits (CLE to RE delay) */
cpu/arm/stm32f103/stm32f10x_map.h:4524:#define  FSMC_PCR3_TAR                       ((u32)0x0001E000)        /* TAR[3:0] bits (ALE to RE delay) */
cpu/arm/stm32f103/stm32f10x_map.h:4548:#define  FSMC_PCR4_TCLR                      ((u32)0x00001E00)        /* TCLR[3:0] bits (CLE to RE delay) */
cpu/arm/stm32f103/stm32f10x_map.h:4554:#define  FSMC_PCR4_TAR                       ((u32)0x0001E000)        /* TAR[3:0] bits (ALE to RE delay) */
cpu/arm/aducrf101/rtimer-arch.c:74:  clock_delay_usec(test_usec);
cpu/arm/aducrf101/clock.c:94:clock_delay_usec(uint16_t usec)
cpu/cc26xx/ti-lib.h:94:#define ti_lib_aon_rtc_delay_config(...)              AONRTCDelayConfig(__VA_ARGS__)
cpu/cc26xx/ti-lib.h:162:#define ti_lib_cpu_delay(...)        CPUdelay(__VA_ARGS__)
cpu/cc26xx/clock.c:80:   * clock_delay_usec
cpu/cc26xx/clock.c:111:   * However, 49 seems to give results much closer to the desired delay
cpu/cc26xx/clock.c:162:clock_delay_usec(uint16_t len)
cpu/cc26xx/clock.c:194: * \brief Obsolete delay function but we implement it here since some code
cpu/cc26xx/clock.c:198:clock_delay(unsigned int i)
cpu/cc26xx/clock.c:200:  clock_delay_usec(i);
cpu/cc26xx/lpm.c:111:    clock_delay_usec(i);
cpu/cc26xx/lpm.c:113:    clock_delay_usec(j - i);
cpu/cc26xx/lpm.c:276:     * This is a chance for modules to delay us a little bit until an ongoing
cpu/6502/README.md:55:      splitting them thus workarounding the "delayed acknowledge".
cpu/mc1322x/tools/mc1322x-load.c:50:int first_delay = 50;
cpu/mc1322x/tools/mc1322x-load.c:51:int second_delay = 100;
cpu/mc1322x/tools/mc1322x-load.c:113:        first_delay = atoi(optarg);
cpu/mc1322x/tools/mc1322x-load.c:116:        second_delay = atoi(optarg);
cpu/mc1322x/tools/mc1322x-load.c:143:    printf("Delay 1: %i\n", first_delay);
cpu/mc1322x/tools/mc1322x-load.c:144:    printf("Delay 2: %i\n", second_delay);
cpu/mc1322x/tools/mc1322x-load.c:221:      usleep(first_delay);
cpu/mc1322x/tools/mc1322x-load.c:272:          usleep(second_delay);
cpu/mc1322x/tools/mc1322x-load.c:321:  printf("       -a first  intercharacter delay, passed to usleep\n");
cpu/mc1322x/tools/mc1322x-load.c:322:  printf("       -b second intercharacter delay, passed to usleep\n");
cpu/mc1322x/tools/mc1322x-load.pl:17:my $first_delay = 50;
cpu/mc1322x/tools/mc1322x-load.pl:18:my $second_delay = 100;
cpu/mc1322x/tools/mc1322x-load.pl:30:	    'a=s' => \$first_delay,
cpu/mc1322x/tools/mc1322x-load.pl:31:	    'b=s' => \$second_delay,
cpu/mc1322x/tools/mc1322x-load.pl:50:    print "       -a first  intercharacter delay, passed to usleep\n";
cpu/mc1322x/tools/mc1322x-load.pl:51:    print "       -b second intercharacter delay, passed to usleep\n";
cpu/mc1322x/tools/mc1322x-load.pl:130:                usleep($first_delay)  if ( $s == 0 ) && ($first_delay != 0);
cpu/mc1322x/tools/mc1322x-load.pl:131:                usleep($second_delay) if ( $s == 1 ) && ($second_delay != 0);
cpu/mc1322x/doc/radioinit:20:the next entry is zero addr with val 0x000161a8... this is a delay
cpu/mc1322x/doc/radioinit:43:then they do 11 entries in cal3  and reg replacment  (first two have delays)
cpu/mc1322x/doc/ws-dis:5418:  4031be:	6800      	ldr	r0, [r0, #0]                        // if == 0 do delay
cpu/mc1322x/doc/ws-dis:5491:  403240:	d1fa      	bne.n	403238 <SMAC_InitFromFlash+0x20> //go to loop if not zero, delay for vreg
cpu/mc1322x/tests/autoack-rx.c:105:			printf("tx ack delay: %d\n\r", t);
cpu/mc1322x/tests/autoack-tx.c:154:				printf("rx ack delay: %d\n\r", r);
cpu/mc1322x/tests/autoack-tx.c:159:				printf("rx ack delay: %d\n\r", r);
cpu/mc1322x/clock.c:102: * Use the 250KHz MACA clock for longer delays to avoid interrupt effects.
cpu/mc1322x/clock.c:106:clock_delay_usec(uint16_t howlong)
cpu/mc1322x/clock.c:125:clock_delay_msec(uint16_t howlong)
cpu/mc1322x/clock.c:127:	while(howlong--) clock_delay_usec(1000);
cpu/mc1322x/clock.c:131: * Legacy delay. The original clock_delay for the msp430 used a granularity
cpu/mc1322x/clock.c:132: * of 2.83 usec. This approximates that delay for values up to 1456 usec.
cpu/mc1322x/clock.c:136:clock_delay(unsigned int howlong)
cpu/mc1322x/clock.c:139:	clock_delay_usec((283*howlong)/100);
cpu/mc1322x/lib/maca.c:898:	/* Disable clocks, cancel possible delayed RX post */
cpu/mc1322x/lib/maca.c:931:	 * This action complete is delayed by some unknown amount, just clearing MACA_IRQ below will not stop it.
cpu/mc1322x/lib/maca.c:1000:	/* seq 1 delay */
cpu/mc1322x/lib/maca.c:1012:	/* cal 3 delay */
cpu/mc1322x/lib/maca.c:1018:	/* cal 3 delay */
cpu/mc1322x/lib/maca.c:1235:			/* do delay command*/
cpu/mc1322x/lib/maca.c:1236:			PRINTF("init_entry: delay 0x%08x\n\r", (unsigned int)entries[1]);
cpu/mc1322x/lib/rtc.c:195:void rtc_delay_ms(uint32_t msec)
cpu/mc1322x/lib/adc.c:113:	* This delay is a function of the Prescale Clock (typically 1 MHz)
cpu/mc1322x/lib/include/rtc.h:52:void rtc_delay_ms(uint32_t msec);
cpu/mc1322x/lib/include/maca.h:315:#define maca_txackdelay (*((volatile uint32_t *)(0x80004140))) 
cpu/mc1322x/lib/include/maca.h:316:#define maca_rxackdelay (*((volatile uint32_t *)(0x80004144))) 
cpu/mc1322x/lib/include/maca.h:317:#define maca_eofdelay   (*((volatile uint32_t *)(0x80004148))) 
cpu/mc1322x/lib/include/maca.h:318:#define maca_ccadelay   (*((volatile uint32_t *)(0x8000414c))) 
cpu/mc1322x/lib/include/maca.h:320:#define maca_txccadelay (*((volatile uint32_t *)(0x80004154))) 
cpu/avr/radio/rf230bb/rf230bb.c:50://_delay_us has the potential to use floating point which brings the 256 byte clz table into RAM
cpu/avr/radio/rf230bb/rf230bb.c:51://#include <util/delay.h>
cpu/avr/radio/rf230bb/rf230bb.c:52://#define delay_us( us )   ( _delay_us( ( us ) ) )
cpu/avr/radio/rf230bb/rf230bb.c:53://_delay_loop_2(uint16_t count) is 4 CPU cycles per iteration, up to 32 milliseconds at 8MHz
cpu/avr/radio/rf230bb/rf230bb.c:54:#include <util/delay_basic.h>
cpu/avr/radio/rf230bb/rf230bb.c:55:#define delay_us( us )   ( _delay_loop_2(1+((unsigned long long)us*F_CPU)/4000000UL) ) 
cpu/avr/radio/rf230bb/rf230bb.c:163:/* RS232 delays will cause 6lowpan fragment overruns! Use DEBUGFLOW instead. */
cpu/avr/radio/rf230bb/rf230bb.c:221:/* RF230 hardware delay times, from datasheet */
cpu/avr/radio/rf230bb/rf230bb.c:386:     * TIME_NOCLK_TO_WAKE delay here?
cpu/avr/radio/rf230bb/rf230bb.c:391:        delay_us(TIME_NOCLK_TO_WAKE);
cpu/avr/radio/rf230bb/rf230bb.c:395:    delay_us(TIME_CMD_FORCE_TRX_OFF);
cpu/avr/radio/rf230bb/rf230bb.c:499:            delay_us(TIME_STATE_TRANSITION_PLL_ACTIVE);
cpu/avr/radio/rf230bb/rf230bb.c:508:            delay_us(TIME_TRX_OFF_TO_PLL_ACTIVE);
cpu/avr/radio/rf230bb/rf230bb.c:510:            delay_us(TIME_STATE_TRANSITION_PLL_ACTIVE);
cpu/avr/radio/rf230bb/rf230bb.c:575:    /* Use the poweron interrupt for delay */
cpu/avr/radio/rf230bb/rf230bb.c:593: * Make sure the delay is long enough, as using SPI too soon will reset the MCU!
cpu/avr/radio/rf230bb/rf230bb.c:598:    delay_us(2*TIME_SLEEP_TO_TRX_OFF);
cpu/avr/radio/rf230bb/rf230bb.c:710:    delay_us(50000UL);  //crystal takes significant time to stabilize
cpu/avr/radio/rf230bb/rf230bb.c:783:  delay_us(TIME_TO_ENTER_P_ON);
cpu/avr/radio/rf230bb/rf230bb.c:801:  /* On powerup a TIME_RESET delay is needed here, however on some other MCU reset
cpu/avr/radio/rf230bb/rf230bb.c:803:   * state (sending wrong hardware FCS for example) unless the full wakeup delay
cpu/avr/radio/rf230bb/rf230bb.c:805:   * Wake time depends on board capacitance; use 2x the nominal delay for safety.
cpu/avr/radio/rf230bb/rf230bb.c:808:  delay_us(2*TIME_SLEEP_TO_TRX_OFF);
cpu/avr/radio/rf230bb/rf230bb.c:809:  //delay_us(TIME_RESET); /* Old impl. */
cpu/avr/radio/rf230bb/rf230bb.c:814:  delay_us(TIME_P_ON_TO_TRX_OFF);
cpu/avr/radio/rf230bb/rf230bb.c:943:    delay_us(2*TIME_SLEEP_TO_TRX_OFF); //extra delay (2x) depends on board capacitance
cpu/avr/radio/rf230bb/rf230bb.c:955:      delay_us(80); //?
cpu/avr/radio/rf230bb/rf230bb.c:1703:  /* If already in receive mode can read the current ED register without delay */
cpu/avr/radio/rf230bb/rf230bb.c:1721:  delay_us(TIME_CCA);
cpu/avr/radio/rf230bb/rf230bb.c:1784://  delay_us(TIME_RESET);
cpu/avr/radio/rf230bb/rf230bb.c:1808:    delay_us(TIME_TRX_OFF_TO_PLL_ACTIVE);
cpu/avr/radio/rf230bb/rf230bb.c:1809:    delay_us(TIME_PLL_LOCK);
cpu/avr/radio/rf230bb/rf230bb.c:1810:    delay_us(TIME_PLL_LOCK);
cpu/avr/radio/rf230bb/halbb.c:392: *          Any delays here can lead to overwrites by the next packet!
cpu/avr/radio/rf230/frame.c:66:#include <util/delay.h>
cpu/avr/radio/rf230/radio.h:216:#define delay_us( us )   ( _delay_loop_2( ( F_CPU / 4000000UL ) * ( us ) ) )
cpu/avr/radio/rf230/radio.c:69:#include <util/delay.h>
cpu/avr/radio/rf230/radio.c:167:    delay_us(TIME_TO_ENTER_P_ON);
cpu/avr/radio/rf230/radio.c:181:    delay_us(TIME_P_ON_TO_TRX_OFF); /* Wait for the transition to be complete. */
cpu/avr/radio/rf230/radio.c:354:        delay_us(TIME_PLL_LOCK);
cpu/avr/radio/rf230/radio.c:671:    delay_us(TIME_FTN_TUNING); /* Wait for the calibration to finish. */
cpu/avr/radio/rf230/radio.c:705:    delay_us(TIME_PLL_LOCK);
cpu/avr/radio/rf230/radio.c:857:            delay_us(TIME_STATE_TRANSITION_PLL_ACTIVE);
cpu/avr/radio/rf230/radio.c:863:            delay_us(TIME_STATE_TRANSITION_PLL_ACTIVE);
cpu/avr/radio/rf230/radio.c:872:            delay_us(TIME_TRX_OFF_TO_PLL_ACTIVE);
cpu/avr/radio/rf230/radio.c:874:            delay_us(TIME_STATE_TRANSITION_PLL_ACTIVE);
cpu/avr/radio/rf230/radio.c:940:    delay_us(TIME_SLEEP_TO_TRX_OFF);
cpu/avr/radio/rf230/radio.c:963:    delay_us(TIME_NOCLK_TO_WAKE);
cpu/avr/radio/rf230/radio.c:965:    delay_us(TIME_CMD_FORCE_TRX_OFF);
cpu/avr/radio/rf230/radio.c:977:    delay_us(TIME_RESET);
cpu/avr/radio/mac/sicslowmac.c:52:#include <util/delay.h>
cpu/avr/radio/mac/sicslowmac.c:399:  _delay_ms(SICSLOW_CORRECTION_DELAY);
cpu/avr/radio/mac/sicslowmac.c:497:      /** \todo: Fix delay in sicslowmac so they do not block receiving */
cpu/avr/radio/mac/sicslowmac.c:499:       //We have blocking delay here, it is safest this way. BUT doesn't solve the
cpu/avr/radio/mac/sicslowmac.c:502:	 	  _delay_ms(10);
cpu/avr/radio/mac/sicslowmac.c:504:	      _delay_ms(50);
cpu/avr/radio/mac/sicslowmac.c:506:	      _delay_ms(200);
cpu/avr/dev/debug.c:3:#include "delay.h"
cpu/avr/dev/debug.c:9:delay(void)
cpu/avr/dev/debug.c:27:    delay();
cpu/avr/dev/usb/usb_drv.c:53:#include <util/delay.h>
cpu/avr/dev/usb/rndis/cdc_eem.c:13:#include <util/delay.h>
cpu/avr/dev/usb/rndis/cdc_ecm.c:17:#include <util/delay.h>
cpu/avr/dev/usb/rndis/rndis.c:81:#include <util/delay.h>
cpu/avr/dev/usb/rndis/rndis_task.c:63:#include <util/delay.h>
cpu/avr/dev/clock.c:180: * Copied from _delay_loop_2 in AVR library delay_basic.h, 4 clocks per loop.
cpu/avr/dev/clock.c:181: * For accurate short delays, inline _delay_loop_2 in the caller, use a constant
cpu/avr/dev/clock.c:182: * value for the delay, and disable interrupts if necessary.
cpu/avr/dev/clock.c:184:static inline void my_delay_loop_2(uint16_t __count) __attribute__((always_inline));
cpu/avr/dev/clock.c:186:my_delay_loop_2(uint16_t __count)
cpu/avr/dev/clock.c:196:clock_delay_usec(uint16_t dt)
cpu/avr/dev/clock.c:199:/* Accurate delay at any frequency, but introduces a 64 bit intermediate
cpu/avr/dev/clock.c:204:  my_delay_loop_2(((uint64_t)(dt) * (uint64_t) F_CPU) / 4000000ULL);
cpu/avr/dev/clock.c:209:  my_delay_loop_2((dt*(uint16_t)(F_CPU/3250000)));
cpu/avr/dev/clock.c:213:  my_delay_loop_2((dt*(uint16_t)(F_CPU/3250000)));
cpu/avr/dev/clock.c:217:  my_delay_loop_2((dt*(uint16_t)(F_CPU/2000000))/2);
cpu/avr/dev/clock.c:221:  my_delay_loop_2((dt*(uint16_t)(F_CPU/2000000))/2);
cpu/avr/dev/clock.c:225:  my_delay_loop_2((dt*(uint16_t)(F_CPU/1000000))/4);
cpu/avr/dev/clock.c:229:  my_delay_loop_2((dt*(uint16_t)(F_CPU/1000000))/4);
cpu/avr/dev/clock.c:233:  my_delay_loop_2(dt);
cpu/avr/dev/clock.c:239: * Legacy delay. The original clock_delay for the msp430 used a granularity
cpu/avr/dev/clock.c:240: * of 2.83 usec. This approximates that delay for values up to 1456 usec.
cpu/avr/dev/clock.c:244:clock_delay(unsigned int howlong)
cpu/avr/dev/clock.c:247:  clock_delay_usec((45*howlong)>>4);
cpu/avr/dev/clock.c:253: * \param howlong   How many milliseconds to delay.
cpu/avr/dev/clock.c:255: * Neither interrupts nor the watchdog timer is disabled over the delay.
cpu/avr/dev/clock.c:260:clock_delay_msec(uint16_t howlong)
cpu/avr/dev/clock.c:264:  while(howlong--) clock_delay_usec(1000);
cpu/avr/dev/clock.c:267:  while(howlong--) {clock_delay_usec(i);i=999;}
cpu/avr/dev/clock.c:270:  while(howlong--) {clock_delay_usec(i);i=999;}
cpu/avr/dev/clock.c:273:  while(howlong--) {clock_delay_usec(i);i=999;}
cpu/avr/dev/clock.c:276:  while(howlong--) {clock_delay_usec(i);i=999;}
cpu/avr/bootloader.c:3:#include <util/delay.h>
cpu/avr/bootloader.c:52:    _delay_ms(10);
cpu/avr/bootloader.c:98:        _delay_ms(10);
cpu/stm32w108/clock.c:106:clock_delay(unsigned int i)
cpu/stm32w108/rtimer-arch.h:69:/* One tick: 341.33 us. Using this value we will delay about 9.22 sec
cpu/stm32w108/rtimer-arch.h:85:/* One tick: 85.33 us. Using this value we will delay about 1.84 sec
cpu/stm32w108/hal/micro/micro-common.h:112: * and is intended to create the short delays required when interfacing with
cpu/stm32w108/hal/micro/cortexm3/micro-common-internal.c:244:// -max delay is 65535 usec.
cpu/stm32w108/hal/micro/cortexm3/micro-common-internal.c:255:  //that means the clock is half speed, 6MHz.  We need to halve our delay
cpu/stm32w108/hal/micro/cortexm3/micro-common-internal.c:270:  // since our max delay (65535<<1) is less than half the size of the 
cpu/stm32w108/hal/micro/cortexm3/flash.c:37://causes the chip to go ATOMIC for 21ms and this delay will disrupt interrupt
cpu/stm32w108/hal/micro/cortexm3/flash.c:258:  //If there are any interrupts pending that could have been delayed for 21ms,
cpu/stm32w108/hal/micro/cortexm3/micro-common.h:161: * and is intended to create the short delays required when interfacing with
cpu/stm32w108/hal/micro/cortexm3/clocks.c:27://the delay.
cpu/stm32w108/hal/micro/cortexm3/clocks.c:161://the delay.
cpu/stm32w108/hal/micro/cortexm3/compiler/gnu.h:162:  #undef __delay_cycles
cpu/stm32w108/hal/micro/cortexm3/compiler/gnu.h:164:   * @brief __delay_cycles() is an intrinsic IAR call; however, we
cpu/stm32w108/hal/micro/cortexm3/compiler/gnu.h:169:  #define __delay_cycles(x)  please_use_halCommonDelayMicroseconds_instead_of_delay_cycles
cpu/stm32w108/hal/micro/cortexm3/compiler/iar.h:151:  #undef __delay_cycles
cpu/stm32w108/hal/micro/cortexm3/compiler/iar.h:153:   * @brief __delay_cycles() is an intrinsic IAR call; however, we
cpu/stm32w108/hal/micro/cortexm3/compiler/iar.h:158:  #define __delay_cycles(x)  please_use_halCommonDelayMicroseconds_instead_of_delay_cycles
cpu/pic32/clock.c:126:clock_delay_usec(uint16_t dt)
cpu/pic32/clock.c:150:clock_delay(unsigned int delay)
cpu/pic32/clock.c:152:  clock_delay_usec(delay);
cpu/msp430/f5xxx/clock.c:188:clock_delay(unsigned int i)
cpu/msp430/f1xxx/clock.c:191:clock_delay(unsigned int i)
cpu/msp430/loader-arch.c:118:	clock_delay(60000);
cpu/msp430/loader-arch.c:123:      clock_delay(60000);
cpu/msp430/loader-arch.c:129:	clock_delay(60000);
cpu/msp430/loader-arch.c:142:	clock_delay(60000);
cpu/msp430/loader-arch.c:204:    clock_delay(20000);
cpu/cc2538/dev/cc2538-rf.c:597:    clock_delay_usec(6);
cpu/cc2538/dev/i2c.c:59:  clock_delay_usec(50);
cpu/cc2538/dev/i2c.c:136:  /* Here we need a delay, otherwise the I2C module keep the receiver mode */
cpu/cc2538/dev/i2c.c:137:  clock_delay_usec(1);
cpu/cc2538/clock.c:66:/* Prescaler for GPT0:Timer A used for clock_delay_usec(). */
cpu/cc2538/clock.c:87: * We also initialise GPT0:Timer A, which is used by clock_delay_usec().
cpu/cc2538/clock.c:105:   * We only use GPT0 for clock_delay_usec. We initialise it here so we can
cpu/cc2538/clock.c:151: * Arch-specific implementation of clock_delay_usec for the cc2538
cpu/cc2538/clock.c:156:clock_delay_usec(uint16_t dt)
cpu/cc2538/clock.c:166: * \brief Obsolete delay function but we implement it here since some code
cpu/cc2538/clock.c:170:clock_delay(unsigned int i)
cpu/cc2538/clock.c:172:  clock_delay_usec(i);
cpu/rl78/Communication.c:128:  char delay = 0;
cpu/rl78/Communication.c:339:  for(delay = 0; delay < 50; delay++) {
cpu/cc2430/dev/cc2430_rf.c:132:      clock_delay_usec(2);
cpu/cc2430/dev/cc2430_rf.c:445:    clock_delay_usec(6);
cpu/cc2430/dev/clock.c:58: * Each iteration is ~1.0xy usec, so this function delays for roughly len usec
cpu/cc2430/dev/clock.c:61:clock_delay_usec(uint16_t len)
cpu/cc2430/8051def.h:17:/* This port no longer implements the legacy clock_delay. Hack its usages
cpu/cc2430/8051def.h:19: * NB: This also overwrites the prototype so delay_usec() is declared twice */
cpu/cc2430/8051def.h:20:#define clock_delay(t) clock_delay_usec(t)
cpu/cc253x/dev/clock.c:61: * Each iteration is ~1.0xy usec, so this function delays for roughly len usec
cpu/cc253x/dev/clock.c:64:clock_delay_usec(uint16_t len)
cpu/cc253x/dev/cc2530-rf.c:461:    clock_delay_usec(6);
cpu/cc253x/8051def.h:17:/* This port no longer implements the legacy clock_delay. Hack its usages
cpu/cc253x/8051def.h:19: * NB: This also overwrites the prototype so delay_usec() is declared twice */
cpu/cc253x/8051def.h:20:#define clock_delay(t) clock_delay_usec(t)
core/contiki-default-conf.h:184:   performance degradation that is caused by delayed ACKs. */
core/net/rpl/rpl-timers.c:94:  instance->dio_next_delay = ticks;
core/net/rpl/rpl-timers.c:101:   * operate efficiently. Therefore we need to calculate the delay between
core/net/rpl/rpl-timers.c:104:  instance->dio_next_delay -= ticks;
core/net/rpl/rpl-timers.c:159:           instance->dio_next_delay);
core/net/rpl/rpl-timers.c:160:    ctimer_set(&instance->dio_timer, instance->dio_next_delay, handle_dio_timer, instance);
core/net/rpl/rpl.h:227:  clock_time_t dio_next_delay; /* delay for completion of dio interval */
core/net/ipv6/multicast/smrf.c:63:#define SMRF_INTERVAL_COUNT  ((CLOCK_SECOND >> 2) / fwd_delay)
core/net/ipv6/multicast/smrf.c:70:static uint8_t fwd_delay;
core/net/ipv6/multicast/smrf.c:143:     * Add a delay (D) of at least SMRF_FWD_DELAY() to compensate for how
core/net/ipv6/multicast/smrf.c:147:    fwd_delay = SMRF_FWD_DELAY();
core/net/ipv6/multicast/smrf.c:151:    if(fwd_delay < SMRF_MIN_FWD_DELAY) {
core/net/ipv6/multicast/smrf.c:152:      fwd_delay = SMRF_MIN_FWD_DELAY;
core/net/ipv6/multicast/smrf.c:156:    if(fwd_delay == 0) {
core/net/ipv6/multicast/smrf.c:157:      /* No delay required, send it, do it now, why wait? */
core/net/ipv6/multicast/smrf.c:162:      /* Randomise final delay in [D , D*Spread], step D */
core/net/ipv6/multicast/smrf.c:168:        fwd_delay = fwd_delay * (1 + ((random_rand() >> 11) % fwd_spread));
core/net/ipv6/multicast/smrf.c:173:      ctimer_set(&mcast_periodic, fwd_delay, mcast_fwd, NULL);
core/net/ipv6/multicast/smrf.c:176:           uip_len, fwd_delay, fwd_spread);
core/net/ipv6/uip-ds6.c:627:   * should delay the reply by a random value between 0 and 500ms timers.
core/net/ip/tcpip.c:701:        PRINTF("tcpip_ipv6_output: nbr cache entry stale moving to delay\n");
core/net/ip/resolv.c:879:         * we don't need to delay probing for a second.
core/net/ip/resolv.c:1117:  static struct etimer delay;
core/net/ip/resolv.c:1128:    etimer_set(&delay, *(clock_time_t *) data);
core/net/ip/resolv.c:1134:  etimer_set(&delay, CLOCK_SECOND * (random_rand() & 0xFF) / 1024);
core/net/ip/uip-split.h:45: * the delayed ACK algorithm employed by most TCP receivers, uIP's
core/net/ip/uip-split.h:51: * two, the delayed ACK algorithm is not invoked at TCP
core/net/ip/uip-split.h:65: * delayed ACK throughput degradation. 
core/sys/clock.h:129: * \param dt   How many microseconds to delay.
core/sys/clock.h:131: * \note Interrupts could increase the delay by a variable amount.
core/sys/clock.h:133:void clock_delay_usec(uint16_t dt);
core/sys/clock.h:141:void clock_delay(unsigned int delay);
core/dev/leds.c:86:  clock_delay(400);
core/contiki-default-conf.h~:184:   performance degradation that is caused by delayed ACKs. */
platform/sky/apps/fader.c:48:  int delay;
platform/sky/apps/fader.c:59:  for(f->delay = 3980; f->delay > 20; f->delay -= 20) {
platform/sky/apps/fader.c:61:    clock_delay(4000 - f->delay);
platform/sky/apps/fader.c:63:    clock_delay(f->delay);
platform/sky/apps/fader.c:75:  for(f->delay = 20; f->delay < 3980; f->delay += 20) {
platform/sky/apps/fader.c:77:    clock_delay(4000 - f->delay);
platform/sky/apps/fader.c:79:    clock_delay(f->delay);
platform/sky/dev/i2c.c:84:#define delay_4_7us() do{ _NOP(); _NOP(); _NOP(); _NOP(); \
platform/sky/dev/i2c.c:88:#define delay_4us()   do{ _NOP(); _NOP(); _NOP(); _NOP(); \
platform/sky/dev/i2c.c:149:  delay_4_7us();
platform/sky/dev/i2c.c:151:  delay_4us();
platform/sky/dev/i2c.c:160:  delay_4us();
platform/cc2538dk/dev/als-sensor.c:59:  clock_delay_usec(2000);
platform/minimal-net/clock.c:92:clock_delay(unsigned int d)
platform/mbxxx/clock.c:119:void clock_delay(unsigned int i)
platform/avr-atmega128rfa1/contiki-main.c:139:/* JTAG, SPI enabled, Internal RC osc, Boot flash size 4K, 6CK+65msec delay, brownout disabled */
platform/avr-atmega128rfa1/contiki-main.c:230://#include <util/delay_basic.h>
platform/avr-atmega128rfa1/contiki-main.c:231://#define delay_us( us )   ( _delay_loop_2(1+(us*F_CPU)/4000000UL) ) 
platform/avr-atmega128rfa1/contiki-main.c:232://   delay_us(50000);
platform/avr-atmega128rfa1/apps/raven-webserver/httpd-cgi.c:33:#include <util/delay.h>
platform/avr-atmega128rfa1/apps/raven-webserver/httpd-cgi.c:34:#define delay_us( us )   ( _delay_us( ( us ) ) )
platform/avr-atmega128rfa1/apps/raven-webserver/httpd-cgi.c:437: // delay_us(100); //delay needed?
platform/avr-atmega128rfa1/apps/raven-lcd-interface/raven-lcd.c:307:        /* Note cmd frame is written in an interrupt - delays here can cause overwriting by next command */
platform/avr-atmega128rfa1/contiki-conf.h:72:void clock_delay_msec(uint16_t howlong);
platform/eval-adf7xxxmb4z/contiki-main.c:103:delay_1sec(void)
platform/eval-adf7xxxmb4z/contiki-main.c:121:  delay_1sec();
platform/avr-ravenusb/cdc_task.c:76:#include <util/delay.h>
platform/avr-ravenusb/cdc_task.c:750:							_delay_us(3*10);
platform/avr-ravenusb/cdc_task.c:802:					for(i = 0; i < 10; i++)_delay_ms(100);
platform/avr-ravenusb/cdc_task.c:812:					for(i = 0; i < 10; i++)_delay_ms(100);
platform/avr-ravenusb/cdc_task.c:814:					for(i = 0; i < 20; i++)_delay_ms(100);
platform/avr-ravenusb/cdc_task.c:841:					_delay_ms(100);
platform/avr-ravenusb/rng.c:7:#include <util/delay.h>
platform/avr-ravenusb/rng.c:18:/* delay_us uses floating point which includes (in some avr-gcc's) a 256 byte __clz_tab in the RAM through the .data section. */
platform/avr-ravenusb/rng.c:19:/* _delay_loop_1 avoids this, it is 3 CPU cycles per loop, 375ns @ 8MHz */
platform/avr-ravenusb/rng.c:20://#define TEMPORAL_AGITATION()		do { static uint8_t agitator; agitator*=97; agitator+=101; _delay_us(agitator>>1); } while (0);
platform/avr-ravenusb/rng.c:21:#define TEMPORAL_AGITATION()		do { static uint8_t agitator; agitator*=97; agitator+=101; _delay_loop_1(agitator>>1); } while (0);
platform/avr-ravenusb/contiki-raven-default-init-lowlevel.c:41:#include <util/delay.h>
platform/avr-ravenusb/contiki-raven-default-init-lowlevel.c:102:          _delay_us(1);
platform/avr-ravenusb/contiki-conf.h:86:void clock_delay_msec(uint16_t howlong);
platform/avr-ravenusb/contiki-raven-main.c:54:#include <util/delay.h>
platform/sensinode/contiki-sensinode-main.c:377:      clock_delay_usec(65);
platform/wismote/dev/sht15.c:52:* @param       uint16 usec - number of microseconds delay
platform/wismote/dev/sht15.c:83:      this driver allow to drive the sensor with GPIO and delay
platform/wismote/dev/i2c.c:82:#define delay_4_7us() do{ _NOP(); _NOP(); _NOP(); _NOP(); \
platform/wismote/dev/i2c.c:86:#define delay_4us()   do{ _NOP(); _NOP(); _NOP(); _NOP(); \
platform/wismote/dev/i2c.c:147:  delay_4_7us();
platform/wismote/dev/i2c.c:149:  delay_4us();
platform/wismote/dev/i2c.c:158:  delay_4us();
platform/wismote/dev/sht15.h:38:      this driver allow to drive the sensor with GPIO and delay
platform/wismote/platform-conf.h:195:#define CC2520_SPI_ENABLE()     do{ UCB0CTL1 &= ~UCSWRST;  clock_delay(5); P3OUT &= ~BIT0;clock_delay(5);}while(0)
platform/wismote/platform-conf.h:197:#define CC2520_SPI_DISABLE()    do{clock_delay(5);UCB0CTL1 |= UCSWRST;clock_delay(1); P3OUT |= BIT0;clock_delay(5);}while(0)
platform/remote/dev/mp3-wtv020sd.c:179:  clock_delay_usec(MP3_USEC_DELAY);
platform/remote/dev/mp3-wtv020sd.c:206:  clock_delay_usec(MP3_USEC_DELAY);
platform/remote/dev/mp3-wtv020sd.c:209:  clock_delay_usec(MP3_USEC_RESET_DELAY);
platform/remote/dev/mp3-wtv020sd.c:262:  clock_delay_usec(MP3_USEC_CMD_DELAY / 10);
platform/remote/dev/mp3-wtv020sd.c:265:    clock_delay_usec(MP3_USEC_CMD_DELAY / 2);
platform/remote/dev/mp3-wtv020sd.c:271:    clock_delay_usec(MP3_USEC_CMD_DELAY / 2);
platform/remote/dev/mp3-wtv020sd.c:273:    clock_delay_usec(MP3_USEC_CMD_DELAY);
platform/remote/dev/mp3-wtv020sd.c:275:      clock_delay_usec(MP3_USEC_CMD_DELAY / 10);
platform/remote/dev/mp3-wtv020sd.c:278:  clock_delay_usec(MP3_USEC_CMD_DELAY / 8);
platform/srf06-cc26xx/sensortag/mpu-9250-sensor.c:207:#define delay_ms(i) (ti_lib_cpu_delay(8000 * (i)))
platform/srf06-cc26xx/sensortag/mpu-9250-sensor.c:374:    delay_ms(10);
platform/srf06-cc26xx/sensortag/buzzer.c:123:   * Currently GPT0 is in use by clock_delay_usec (GPT0/TB) and by this
platform/srf06-cc26xx/sensortag/buzzer.c:126:   * clock_delay_usec
platform/srf06-cc26xx/sensortag/ext-flash.c:337:     * should be enough to delay
platform/avr-rcb/contiki-conf.h:78:void clock_delay_msec(uint16_t howlong);
platform/avr-zigbit/contiki-conf.h:78:void clock_delay_msec(uint16_t howlong);
platform/micaz/dev/ds2401.c:106: * The delay caused by calling the delay_loop is given by the following
platform/micaz/dev/ds2401.c:108: *           delay(us) = (4n + 1)/XTAL
platform/micaz/dev/ds2401.c:110: * TODO: Moving the delay_loop to dev/clock.c
platform/micaz/dev/ds2401.c:113:delay_loop(uint16_t __count)
platform/micaz/dev/ds2401.c:127:#define udelay(u) delay_loop(((7.3728F * u)-1)/4)
platform/micaz/dev/ds2401.c:134:  udelay(500);     /* 480 < tH < 640 */
platform/micaz/dev/ds2401.c:136:  udelay(tI);
platform/micaz/dev/ds2401.c:138:  udelay(tJ);
platform/micaz/dev/ds2401.c:149:      udelay(tA);
platform/micaz/dev/ds2401.c:151:      udelay(tB);
platform/micaz/dev/ds2401.c:154:      udelay(tC);
platform/micaz/dev/ds2401.c:156:      udelay(tD);
platform/micaz/dev/ds2401.c:172:    udelay(tA);
platform/micaz/dev/ds2401.c:174:    udelay(tE);
platform/micaz/dev/ds2401.c:177:    udelay(tF);
platform/micaz/dev/clock.c:122:clock_delay(unsigned int i)
platform/micaz/platform-conf.h:72:void clock_delay_msec(uint16_t howlong);
platform/z1/apps/fader.c:48:  int delay;
platform/z1/apps/fader.c:59:  for(f->delay = 3980; f->delay > 20; f->delay -= 20) {
platform/z1/apps/fader.c:61:    clock_delay(4000 - f->delay);
platform/z1/apps/fader.c:63:    clock_delay(f->delay);
platform/z1/apps/fader.c:75:  for(f->delay = 20; f->delay < 3980; f->delay += 20) {
platform/z1/apps/fader.c:77:    clock_delay(4000 - f->delay);
platform/z1/apps/fader.c:79:    clock_delay(f->delay);
platform/seedeye/dev/mrf24j40/mrf24j40.c:188:  clock_delay_usec(2500);
platform/seedeye/dev/mrf24j40/mrf24j40.c:489:  clock_delay_usec(2500);
platform/seedeye/dev/mrf24j40/mrf24j40.c:541:  clock_delay_usec(2500);
platform/seedeye/dev/mrf24j40/mrf24j40.c:545:  clock_delay_usec(2500);
platform/seedeye/dev/mrf24j40/mrf24j40.c:565:  clock_delay_usec(2500);
platform/avr-raven/apps/raven-lcd-interface/raven-lcd.c:294:        /* Note cmd frame is written in an interrupt - delays here can cause overwriting by next command */
platform/avr-raven/contiki-conf.h:84:void clock_delay_msec(uint16_t howlong);
platform/avr-raven/contiki-raven-main.c:148:/* JTAG, SPI enabled, Internal RC osc, Boot flash size 4K, 6CK+65msec delay, brownout disabled */
platform/avr-raven/contiki-raven-main.c:230://#include <util/delay_basic.h>
platform/avr-raven/contiki-raven-main.c:231://#define delay_us( us )   ( _delay_loop_2(1+(us*F_CPU)/4000000UL) ) 
platform/avr-raven/contiki-raven-main.c:232://   delay_us(50000);
platform/cooja/sys/clock.c:59:clock_delay(unsigned int delay_time)
platform/native/dev/beep.h:62: * time is measured in the same units as for the clock_delay()
platform/native/dev/beep.h:82: * time is measured in the same units as for the clock_delay()
platform/native/clock.c:66:clock_delay(unsigned int d)
platform/exp5438/hal_lcd.c:127:    __delay_cycles(0x47FF);                        //Reset Pulse
platform/exp5438/hal_lcd.c:387:	__delay_cycles(50000);
platform/exp5438/msp430.c:112:    __delay_cycles(10000);
platform/exp5438/clock.c:188:clock_delay(unsigned int i)
platform/exp5438/clock.c:191:   * This means that delay(i) will delay the CPU for CONST + 3x
platform/exp5438/clock.c:193:   * delay.
platform/exp5438/clock.c:217:__delay_cycles(unsigned long c)
platform/cc2530dk/contiki-main.c:366:      clock_delay_usec(65);
platform/avr-ravenlcd/sleep.c:44:#include <util/delay.h>
platform/avr-ravenlcd/sleep.c:129:	    _delay_us(1000);
platform/avr-ravenlcd/menu.c:43:#include <util/delay.h>
platform/avr-ravenlcd/menu.c:179:    _delay_us(10000); //deinit trash clears done flag on 1284p
platform/avr-ravenlcd/menu.c:241:	    _delay_us(20000);
platform/avr-ravenlcd/beep.c:47:#include "util/delay.h"
platform/avr-ravenlcd/beep.c:189:        for (i = pgm_read_byte(noteptr++);i > 0; i--) _delay_us(1000UL*TONE_LENGTH);
platform/avr-ravenlcd/beep.c:190:        tone = NONE;_delay_us(1000UL*TONE_GAP);
